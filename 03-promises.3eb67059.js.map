{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SA+BE,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAa,C,SAAEL,E,MAAUC,GAE/B,OAAO,IAAIK,SAAQ,CAACC,EAASC,KACvBN,GACFK,EAAQF,GAEVG,EAAOH,EAAW,G,CArCTI,SAASC,cAAc,QAE/BC,iBAAiB,UAExB,SAA0BC,GACxBA,EAAIC,iBAEJ,IAAIC,EAAQC,OAAOH,EAAII,OAAOf,MAAMgB,OAChCC,EAAOH,OAAOH,EAAII,OAAOE,KAAKD,OAC9BE,EAASJ,OAAOH,EAAII,OAAOG,OAAOF,OAEtC,IAAK,IAAIjB,EAAW,EAAGA,GAAYmB,EAAQnB,GAAY,EACrDD,EAAcC,EAAUc,GACrBM,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBoB,YAAW,KACTxB,EAAAyB,OAAOC,QAAQ,8CAA8C,GAC5DtB,EAAM,IAERuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBoB,YAAW,KACTxB,EAAAyB,OAAOG,QAAQ,6CAA6C,GAC3DxB,EAAM,IAEba,GAASI,EAGXN,EAAIc,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('form');\n\nformEl.addEventListener('submit', handleFormSubmit);\n\nfunction handleFormSubmit(evt) {\n  evt.preventDefault();\n\n  let delay = Number(evt.target.delay.value);\n  let step = Number(evt.target.step.value);\n  let amount = Number(evt.target.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        setTimeout(() => {\n          Notify.success('Fulfilled promise ${position} in ${delay}ms');\n        }, delay);\n      })\n        .catch(({ position, delay }) => {\n          setTimeout(() => {\n            Notify.failure('Rejected promise ${position} in ${delay}ms');\n          }, delay);\n        });\n      delay += step;\n    }\n  \n    evt.currentTarget.reset();\n  }\n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    const objPromise = { position, delay };\n  \n    return new Promise((resolve, reject) => {\n      if (shouldResolve) {\n        resolve(objPromise);\n      }\n      reject(objPromise);\n    });\n  }\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","objPromise","Promise","resolve","reject","document","querySelector","addEventListener","evt","preventDefault","delay1","Number","target","value","step","amount","then","setTimeout","Notify","success","catch","failure","currentTarget","reset"],"version":3,"file":"03-promises.3eb67059.js.map"}